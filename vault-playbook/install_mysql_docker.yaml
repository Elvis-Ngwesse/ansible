---
- name: Install Docker and MySQL container on GCP and AWS instances
  hosts: all
  become: yes
  gather_facts: yes
  vars_files:
    - vault_secrets.yml

  tasks:

    - name: Show OS for debugging
      debug:
        msg: "OS family: {{ ansible_os_family }}, Distribution: {{ ansible_distribution }}"

    - name: Install dependencies on Debian/Ubuntu
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Add Docker GPG key (Ubuntu/Debian)
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Docker APT repo (Ubuntu 20.04)
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Install Docker on Ubuntu/Debian
      apt:
        name: docker-ce
        state: latest
      when: ansible_os_family == "Debian"

    - name: Install Docker on Amazon Linux
      yum:
        name:
          - docker
        state: present
      when: ansible_distribution == "Amazon"

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add user to Docker group (optional, useful for manual docker use)
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Pull MySQL Docker image
      docker_image:
        name: mysql
        tag: "latest"
        source: pull

    - name: Run MySQL container
      docker_container:
        name: mysql_server
        image: mysql:latest
        state: started
        restart_policy: always
        exposed_ports:
          - "3306"
        published_ports:
          - "3306:3306"
        env:
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
          MYSQL_DATABASE: "{{ mysql_db_name }}"
          MYSQL_USER: "{{ mysql_db_user }}"
          MYSQL_PASSWORD: "{{ mysql_db_password }}"
        volumes:
          - mysql_data:/var/lib/mysql

    - name: Wait for MySQL to be ready
      wait_for:
        host: "{{ ansible_host }}"
        port: 3306
        state: started
        delay: 10
        timeout: 160

    - name: Ensure pip is installed (Debian/Ubuntu)
      apt:
        name: python3-pip
        state: present
      when: ansible_os_family == "Debian"

    - name: Ensure pip is installed (Amazon Linux)
      yum:
        name: python3-pip
        state: present
      when: ansible_distribution == "Amazon"

    - name: Install PyMySQL for Ansible MySQL modules
      pip:
        name: PyMySQL
        executable: pip3

    - name: Execute MySQL query
      community.mysql.mysql_query:
        login_user: "{{ mysql_db_user }}"
        login_password: "{{ mysql_db_password }}"
        login_host: "{{ ansible_host }}"
        login_port: 3306
        query: "SELECT DATABASE();"
      register: mysql_query_result

    - name: Show MySQL connection result
      debug:
        msg: "MySQL is connected to database: {{ mysql_query_result.query_result }}"
