---
- name: Install Kubernetes Dashboard and required tools
  hosts: tag__items___master____ping____ssh__
  remote_user: root
  become: yes
  gather_facts: yes

  vars:
    kubeconfig_path: /etc/kubernetes/admin.conf
    dashboard_version: v2.7.0
    dashboard_manifest_url: "https://raw.githubusercontent.com/kubernetes/dashboard/{{ dashboard_version }}/aio/deploy/recommended.yaml"
    dashboard_manifest_local: /root/dashboard.yaml
    master_ip: "{{ ansible_host | default(ansible_default_ipv4.address) }}"

  tasks:
    - name: Ensure Python3 and pip3 are installed
      apt:
        name:
          - python3
          - python3-pip
        state: present
        update_cache: yes

    - name: Ensure kubectl is installed
      apt:
        name: kubectl
        state: present
        update_cache: yes

    - name: Install Kubernetes Python module
      pip:
        name: kubernetes
        executable: pip3

    - name: Download Kubernetes Dashboard manifest
      get_url:
        url: "{{ dashboard_manifest_url }}"
        dest: "{{ dashboard_manifest_local }}"
        mode: '0644'
        force: yes

    - name: Apply Kubernetes Dashboard manifest
      command: kubectl apply -f {{ dashboard_manifest_local }} --kubeconfig={{ kubeconfig_path }}
      register: dashboard_apply
      changed_when: "'configured' in dashboard_apply.stdout or 'created' in dashboard_apply.stdout"

    - name: Create admin-user ServiceAccount for Dashboard (idempotent)
      shell: |
        kubectl get serviceaccount admin-user -n kubernetes-dashboard --kubeconfig={{ kubeconfig_path }} || \
        kubectl create serviceaccount admin-user -n kubernetes-dashboard --kubeconfig={{ kubeconfig_path }}
      register: sa_result
      changed_when: "'created' in sa_result.stdout"

    - name: Create ClusterRoleBinding for admin-user (idempotent)
      shell: |
        kubectl get clusterrolebinding admin-user --kubeconfig={{ kubeconfig_path }} || \
        kubectl create clusterrolebinding admin-user \
          --clusterrole=cluster-admin \
          --serviceaccount=kubernetes-dashboard:admin-user \
          --kubeconfig={{ kubeconfig_path }}
      register: crb_result
      changed_when: "'created' in crb_result.stdout"

    - name: Get access token for admin-user
      command: >
        kubectl -n kubernetes-dashboard create token admin-user
        --kubeconfig={{ kubeconfig_path }}
      register: dashboard_token
      changed_when: false

    - name: Show Kubernetes Dashboard access information
      debug:
        msg:
          - "🎟 Dashboard Token: {{ dashboard_token.stdout }}"
          - "🖥 Access Dashboard at: https://{{ master_ip }}/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/"
