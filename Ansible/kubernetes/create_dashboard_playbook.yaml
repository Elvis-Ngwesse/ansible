#!/usr/bin/env -S ansible-playbook -K
# NOTE: Don't provide the playbook filename in the shebang. It is added automatically.
---

- name: Create dashboard playbook
  hosts: master
  remote_user: kube_user
  become: yes

  tasks:

    ##################################
    # Updates
    ##################################
    - name: Updates
      apt:
        update_cache: yes

    ##################################
    # Copy service and cluster files
    ##################################
    - name: Copy service account and cluster files
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: '0755'
      loop:
        - { src: "clusterrole.yaml", dest: "/home/kube_user" }
        - { src: "ServiceAccount.yaml", dest: "/home/kube_user" }

    ##################################
    # Apply service and role
    ##################################
    - name: Create service-account and role
      become: no
      ansible.builtin.shell: |
        kubectl create namespace kubernetes-dashboard || true
        kubectl apply -f ServiceAccount.yaml
        kubectl apply -f clusterrole.yaml
        kubectl -n kubernetes-dashboard create token admin-user
      register: admin_token

    ##################################
    # Print token
    ##################################
    - name: Extract and display the admin token
      debug:
        msg: >-
          {{ admin_token.stdout.split('\n')[-1] }}

- name: Ensure port 8001 is free
  hosts: localhost
  tasks:
    - name: Check if port 8001 is in use
      ansible.builtin.shell: |
        lsof -i:8001 || true
      register: port_check
      changed_when: False

    - name: Kill process using port 8001 if found
      ansible.builtin.shell: |
        kill -9 $(lsof -t -i:8001) || true
      when: port_check.stdout != ""
    ##################################
    # Establish SSH tunnel
    ##################################
- name: Establish SSH tunnel and run kubectl proxy
  hosts: localhost
  tasks:
    - name: Establish SSH tunnel from the host machine
      ansible.builtin.shell: |
        ssh -L 8001:127.0.0.1:8001 kube_user@178.62.52.32
      async: 3600
      poll: 0  # Run the command in the background
      register: ssh_tunnel

    - name: Show SSH tunnel job details
      debug:
        var: ssh_tunnel

- name: Configure kubectl proxy on remote machine
  hosts: master
  become: yes
  tasks:
    - name: Run kubectl proxy on the remote machine
      ansible.builtin.shell: |
        kubectl proxy
      environment:
        KUBECONFIG: /home/kube_user/.kube/config
      async: 3600
      poll: 0  # Run the command in the background
      register: kubectl_proxy

    - name: Show kubectl proxy job details
      debug:
        var: kubectl_proxy




