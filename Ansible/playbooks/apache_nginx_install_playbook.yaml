#!/usr/bin/env -S ansible-playbook -K
# NOTE: Don't provide the playbook filename in the shebang. It is added automatically.
---

- name: Run command on local host
  hosts: localhost

  tasks:
    - name: Print local user name
      command: "whoami"
      register: results
    - name: Display the user
      debug:
        msg: "User name is : {{ results.stdout }}"
  tags: scenario1

- name: Install apache and nginx playbook
  hosts: all
  remote_user: ansible_user
  become: yes
  become_user: root
  gather_facts: true
  vars:
    page_title: "Welcome to My Server"
    server_name: "My Awesome Web Server"

  tasks:

    ##################################
    # Ping servers to check connection
    ##################################
    - name: Ping servers
      ping:

    ##################################
    # Update packages
    ##################################
    - name: Update apt package cache (Debian/Ubuntu)
      when: ansible_distribution == "Ubuntu"
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Update yum package cache (RedHat/CentOS)
      when: ansible_distribution == "CentOS"
      yum:
        update_cache: yes

    ##################################
    # Install Apache on Debian/Redhat
    ##################################
    - name: Install apache (Debian/Ubuntu)
      apt:
        name: apache2
        state: latest
      when: ansible_distribution == "Ubuntu"

    - name: Ensure Apache2 is enabled and running (Debian/Ubuntu)
      when: ansible_distribution == "Ubuntu"
      service:
        name: apache2
        state: started
        enabled: yes  # Ensure Apache starts on boot
        register: enabled

    ##################################
    # Restart apache
    ##################################
    - name: restart apache (Debian/Ubuntu)
      when: ansible_distribution == "Ubuntu" and enabled.changed == True
      systemd:
        name: apache2
        state: restarted
        enabled: yes
      notify:
        - Ensure apache is running (Debian/Ubuntu)

    ##################################
    # Install Nginx on Debian/Redhat
    ##################################
    - name: Install nginx (RedHat/CentOS)
      when: ansible_distribution == "CentOS"
      yum:
        name: nginx
        state: latest

    - name: Enable default Nginx configuration (CentOS/RedHat)
      copy:
        src: nginx.conf
        dest: /etc/nginx/nginx.conf
        mode: '0644'
      when: ansible_distribution == "CentOS"

    - name: Copy index.html
      when: ansible_distribution == "CentOS"
      template:
        src: index.html.j2
        dest: /usr/share/nginx/html/index.html
        mode: '0644'
      register: copied
    ##################################
    # Restart nginx
    ##################################
    - name: restart nginx (CentOS/RedHat)
      when: ansible_distribution == "CentOS" and copied.changed == True
      systemd:
        name: nginx
        state: restarted
        enabled: yes
      notify:
        - Ensure nginx is running (CentOS/RedHat)

  handlers:
    ##################################
    # Ensure apache is reunning
    ##################################
    - name: Ensure apache is running (Debian/Ubuntu)
      when: ansible_distribution == "Ubuntu"
      service:
        name: apache2
        state: started
        enabled: yes

    ##################################
    # Ensure nginx is running
    ##################################
    - name: Ensure nginx is running (CentOS/RedHat)
      when: ansible_distribution == "CentOS"
      service:
        name: nginx
        state: started
        enabled: yes
